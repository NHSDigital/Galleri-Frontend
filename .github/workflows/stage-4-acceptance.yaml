name: "Acceptance stage"

on:
  workflow_call:
    inputs:
      build_datetime:
        description: "Build datetime, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_timestamp:
        description: "Build timestamp, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_epoch:
        description: "Build epoch, set by the CI/CD pipeline workflow"
        required: true
        type: string
      nodejs_version:
        description: "Node.js version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      python_version:
        description: "Python version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      terraform_version:
        description: "Terraform version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      version:
        description: "Version of the software, set by the CI/CD pipeline workflow"
        required: true
        type: string

env:
  role-to-assume: ${{ vars.AWS_ROLE_ARN }}
  aws-region: ${{ vars.aws_region }}
  aws-bucket-name: ${{ vars.aws_bucket_name }}
  aws-bucket-key-name: ${{ vars.aws_bucket_key_name }}

jobs:
  environment-set-up:
    permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Full history is needed to scan all commits
      - name: "Create infractructure"
        uses: ./.github/actions/terraform
        with:
          role-to-assume: ${{ env.role-to-assume }}
          aws-region: ${{ env.aws-region }}
          aws-bucket-name: ${{ env.aws-bucket-name }}
          aws-bucket-key-name: ${{ env.aws-bucket-key-name }}
      - name: "Seed databases"
        uses: ./.github/actions/seeding
        with:
          role-to-assume: ${{ env.role-to-assume }}
          aws-region: ${{ env.aws-region }}
      - name: "Deploy application"
        run: |
          echo "Deploying application..."
  # test-contract:
  #   runs-on: ubuntu-latest
  #   needs: environment-set-up
  #   timeout-minutes: 10
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: "Run contract test"
  #       run: |
  #         make test-contract
  #     - name: "Save result"
  #       run: |
  #         echo "Nothing to save"
  # test-security:
  #   runs-on: ubuntu-latest
  #   needs: environment-set-up
  #   timeout-minutes: 10
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: "Run security test"
  #       run: |
  #         make test-security
  #     - name: "Save result"
  #       run: |
  #         echo "Nothing to save"
  # test-ui:
  #   runs-on: ubuntu-latest
  #   needs: environment-set-up
  #   timeout-minutes: 10
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: "Run UI test"
  #       run: |
  #         make test-ui
  #     - name: "Save result"
  #       run: |
  #         echo "Nothing to save"
  # test-ui-performance:
  #   runs-on: ubuntu-latest
  #   needs: environment-set-up
  #   timeout-minutes: 10
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: "Run UI performance test"
  #       run: |
  #         make test-ui-performance
  #     - name: "Save result"
  #       run: |
  #         echo "Nothing to save"
  # test-integration:
  #   runs-on: ubuntu-latest
  #   needs: environment-set-up
  #   timeout-minutes: 10
  #   steps:
  #     - name: "Checkout code"
  #       uses: actions/checkout@v3
  #     - name: "Run integration test"
  #       run: |
  #         make test-integration
  #     - name: "Save result"
  #       run: |
  #         echo "Nothing to save"
  # test-accessibility:
  #   runs-on: ubuntu-latest
  #   needs: environment-set-up
  #   timeout-minutes: 10
  #   steps:
  #     - name: "Checkout code"
  #       uses: actions/checkout@v3
  #     - name: "Run accessibility test"
  #       run: |
  #         make test-accessibility
  #     - name: "Save result"
  #       run: |
  #         echo "Nothing to save"
  # test-load:
  #   runs-on: ubuntu-latest
  #   needs: environment-set-up
  #   timeout-minutes: 10
  #   steps:
  #     - name: "Checkout code"
  #       uses: actions/checkout@v3
  #     - name: "Run load tests"
  #       run: |
  #         make test-load
  #     - name: "Save result"
  #       run: |
  #         echo "Nothing to save"
  # environment-tear-down:
  #   runs-on: ubuntu-latest
  #   needs:
  #     [
  #       test-accessibility,
  #       test-contract,
  #       test-integration,
  #       test-load,
  #       test-security,
  #       test-ui-performance,
  #       test-ui,
  #     ]
  #   if: always()
  #   timeout-minutes: 5
  #   steps:
  #     - name: "Checkout code"
  #       uses: actions/checkout@v3
  #     - name: "Tear down environment"
  #       run: |
  #         echo "Tearing down environment..."
